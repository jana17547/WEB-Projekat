// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Web.Migrations
{
    [DbContext(typeof(AutoSkolaContext))]
    [Migration("20220225202545_V12")]
    partial class V12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.AutoSkola", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Tip")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Tip");

                    b.HasKey("ID");

                    b.ToTable("AutoSkola");
                });

            modelBuilder.Entity("Models.Instruktor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.ToTable("Instruktor");
                });

            modelBuilder.Entity("Models.Kandidat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("JMBG");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.HasKey("ID");

                    b.ToTable("Kandidat");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("AutoSkolaID")
                        .HasColumnType("int");

                    b.Property<double>("Cena")
                        .HasColumnType("float")
                        .HasColumnName("Cena");

                    b.Property<int?>("InstruktorID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("AutoSkolaID");

                    b.HasIndex("InstruktorID");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Models.Polaze", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KandidatID")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<int>("Poeni")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KandidatID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("Polaze");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.HasOne("Models.AutoSkola", "AutoSkola")
                        .WithMany("Kategorije")
                        .HasForeignKey("AutoSkolaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Instruktor", "Instruktor")
                        .WithMany("Kategorije")
                        .HasForeignKey("InstruktorID");

                    b.Navigation("AutoSkola");

                    b.Navigation("Instruktor");
                });

            modelBuilder.Entity("Models.Polaze", b =>
                {
                    b.HasOne("Models.Kandidat", "Kandidat")
                        .WithMany("ListaKategorija")
                        .HasForeignKey("KandidatID");

                    b.HasOne("Models.Kategorija", "Kategorija")
                        .WithMany("ListaKandidata")
                        .HasForeignKey("KategorijaID");

                    b.Navigation("Kandidat");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("Models.AutoSkola", b =>
                {
                    b.Navigation("Kategorije");
                });

            modelBuilder.Entity("Models.Instruktor", b =>
                {
                    b.Navigation("Kategorije");
                });

            modelBuilder.Entity("Models.Kandidat", b =>
                {
                    b.Navigation("ListaKategorija");
                });

            modelBuilder.Entity("Models.Kategorija", b =>
                {
                    b.Navigation("ListaKandidata");
                });
#pragma warning restore 612, 618
        }
    }
}
